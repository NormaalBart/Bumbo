@model Bumbo.Models.UnavailableMoments.UnavailableMomentCreateViewModel
@using BumboData.Enums
@{
    ViewData["Title"] = "Afwezigheid toevoegen";
}
<h1 class="text-center">Afwezigheid toevoegen</h1>


<p class="text-center alert-danger">@Html.ValidationMessage("Invalid Moment")</p>




<div class="container">
    <div >
        <form asp-action="Create" id="CreateForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col border border-3 border-dark moments-create-box">
                    <div class="col">
                        <div class="row p-1">
                            <div class="form-group text-center">
                                <span>Van:</span>
                                <input id="startdate" asp-for="StartDate" onchange="onDateChanged(true)" class="form-control" asp-format="{0:yyyy-MM-dd}" />
                                <input step="300" id="starttime" asp-for="StartHour" class="form-control" asp-format="{0:HH:mm}" />
                                <span asp-validation-for="StartDate" class="text-danger"></span>
                                <span asp-validation-for="StartHour" class="text-danger"></span>
                            </div>
                            <div class="form-group text-center">
                                <span>Tot:</span>
                                <input id="enddate" asp-for="EndDate" onchange="onDateChanged(false)" class="form-control" asp-format="{0:yyyy-MM-dd}" />
                                <input step="300" id="endtime" asp-for="EndHour" class="form-control" asp-format="{0:HH:mm}" />
                                <span asp-validation-for="EndDate" class="text-danger"></span>
                                <span asp-validation-for="EndHour" class="text-danger"></span>
                            </div>

                            <div class="form-group text-center">
                                <h5>Reden van afwezigheid:</h5>
                                
                                <tr>
                                    @Html.RadioButtonFor(model => model.Type, UnavailableMomentType.School)School
                                    @Html.RadioButtonFor(model => model.Type, UnavailableMomentType.Other)Anders
                                </tr>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    function onDateChanged(isStart) {
            var inputdata;
            if(isStart){
            inputdata = document.getElementById("startdate").value;
            }else{
            inputdata = document.getElementById("enddate").value;
            }


            $(function () {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetOpenTime", "UnavailableMoments")',
                    data: {
                        dateInput: inputdata
                       
                    },
                    success: function (data) {
                        //handle the data
                        if(isStart){
                        document.getElementById("starttime").value = data;
                        }else{
                        document.getElementById("endtime").value = data;
                        }

                        
                    }
                });

            
        });
    }

</script>

<div class="form-group h-100 d-flex align-items-center justify-content-center p-3">
    <input type="submit" value="Voeg toe!" form="CreateForm" class="btn btn-success btn-lg" />
</div>

<div class ="form-group h-100 d-flex align-items-center justify-content-center p-3">
    <a class="btn btn-danger btn-sm" asp-action="Index">Ga terug naar lijst zonder opslaan</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
