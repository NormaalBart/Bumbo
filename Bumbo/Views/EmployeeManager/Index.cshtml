@model Bumbo.Models.EmployeeManager.EmployeeListIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center">Medewerker management</h1>

<!--Create new button and sorting buttons in a header above the table-->
<div>
    <div class="top-header align-items-center align-items-center">
            <div class="top-header-content">
                <form asp-action="Index" method="get" class="container ">
                <div class="form-actions no-color row ">
   



                    <div class="col-md-2 justify-content-center text-center my-auto">
                        <div class="top-header-content">
                            <a asp-action="Create" class="btn btn-lg btn-primary">Create New</a>
                        </div>
                    </div>
                    <div class="col-md-2 justify-content-center text-center my-auto">
                        <div class="form-group top-header-content form-check">
                            <input type="search" name="SearchString" value="@Model.SearchString" placeholder="Zoek op naam" />
                        </div>
                    </div>

                    <div class="col-md-2 justify-content-center text-center my-auto">
                        <div class="form-group top-header-content">
                            <label class="form-check-label">
                                @Html.DisplayNameFor(model => model.IncludeActive) <br /> <input class="form-check-input" asp-for="IncludeActive" />
                            </label>
                        </div>
                    </div>
                    <div class="col-md-2 justify-content-center text-center my-auto">
                        <div class="form-group top-header-content">
                            <label class="form-check-label">
                                @Html.DisplayNameFor(model => model.IncludeInactive) <br /> <input class="form-check-input" asp-for="IncludeInactive" />
                            </label>
                        </div>
                    </div>
                    <div class="col-md-2 justify-content-center text-center my-auto">
                        <div class="form-group top-header-content">
                            <label>sortering:</label>
                            <label asp-for="CurrentSort" class="control-label"></label>
                            <select asp-for="CurrentSort" class="form-control">
                                <option value="">Select a department</option>
                                @foreach (var item in Model.AvailableSortOptions)
                                {
                                    <option value="@item">@Model.GetSortingDisplayName(item)</option>
                                }
                        </select>
                        </div>
                    </div>
          
                    <div class="col-md-2 justify-content-center text-center my-auto">
                        <div class="btn btn-warning text-center">
                            <input type="submit" value="Zoeken" class="btn btn-default" />
                        </div>
                    </div>
                   
                    </div>
                </form>
            </div>
        </div>
</div>


<table class="table table-striped table-hover table-bordered">
    <thead class="table table-dark">
        <tr >
            <th>
                @Html.DisplayNameFor(model => model.Employees[0].FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employees[0].Function)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Employees[0].Birthdate)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Employees[0].EmployeeJoinedCompany)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employees[0].Active)
            </th>
            <th>
                acties
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Employees) {
        <tr>
            <td>
                    @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Function)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Birthdate)
            </td>
                <td class="text-center">
                @Html.DisplayFor(modelItem => item.EmployeeJoinedCompany)
            </td>
            <td class="text-center">
                @if(item.Active){
                        <div class="alert-success"> @Html.DisplayFor(modelItem => item.Active) </div>
                }else{
                        <div class="alert-danger"> @Html.DisplayFor(modelItem => item.Active) </div>
                }
                
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { employeeKey = item.Id })
            </td>
        </tr>
}
    </tbody>
</table>
