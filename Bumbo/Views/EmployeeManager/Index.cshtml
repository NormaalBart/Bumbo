@model Bumbo.Models.EmployeeManager.EmployeeListIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center">Medewerker management</h1>

<!--Create new button and sorting buttons in a header above the table-->
<div>
    <div class="top-header align-items-start">
            <div class="text-center">
                <form asp-action="Index" method="get" class="container">
                    <div class="form-actions no-color row">
                    <div class="col-2">
                        <a asp-action="Create" class="btn btn-lg btn-primary">Create New</a>
                    </div>
                        <input type="search" name="SearchString" value="@Model.SearchString" placeholder="Zoek op naam" class="col-2" />
                    <div class="form-group form-check  col-2">
                        <label class="form-check-label">
                            <input class="form-check-input" asp-for="IncludeActive" /> @Html.DisplayNameFor(model => model.IncludeActive)
                        </label>
                    </div>
                    <div class="form-group form-check  col-2">
                            <label class="form-check-label">
                                <input class="form-check-input" asp-for="IncludeInactive" /> @Html.DisplayNameFor(model => model.IncludeInactive)
                            </label>
                        </div>

                        <div class="btn btn-warning col-2">
                            <input type="submit" value="Search" class="btn btn-default" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
</div>


<table class="table table-striped table-hover table-bordered">
    <thead class="table table-dark">
        <tr >
            <th>
                @Html.DisplayNameFor(model => model.Employees[0].FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employees[0].Function)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Employees[0].Birthdate)
            </th>
            <th class="text-center">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.Employees[0].EmployeeJoinedCompany)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employees[0].Active)
            </th>
            <th>
                acties
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Employees) {
        <tr>
            <td>
                    @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Function)
            </td>
            <td class="text-center">
                @Html.DisplayFor(modelItem => item.Birthdate)
            </td>
                <td class="text-center">
                @Html.DisplayFor(modelItem => item.EmployeeJoinedCompany)
            </td>
            <td class="text-center">
                @if(item.Active){
                        <div class="alert-success"> @Html.DisplayFor(modelItem => item.Active) </div>
                }else{
                        <div class="alert-danger"> @Html.DisplayFor(modelItem => item.Active) </div>
                }
                
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>
