@using Bumbo.Models.BranchController
@model BranchCreateViewModel


<h1 class="text-center">Filiaal aanmaken</h1>
@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger text-center" role="alert">
        <strong>Oeps!</strong> De veranderingen konden niet opgeslagen worden vanwege invalide data. Probeer alstublieft opnieuw.
    </div>
}

<div class="container ">
    <div>
        <form asp-action="Create" id="CreateForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col border border-3 border-dark employee-create-box">
                    <!--Branch informatie column-->
                    <div class="col">
                        <h5 class="text-center">Bedrijfsinformatie</h5>
                        <div class="row border border-3 border-dark p-1">
                            <div class="form-group col-4">
                                <label asp-for="Name" class="control-label"></label>
                                <input asp-for="Name" class="form-control" placeholder="Naam" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="form-group col-4">
                                <label asp-for="ShelvingDistance" class="control-label"></label>

                                <input asp-for="ShelvingDistance" class="form-control" placeholder="Spiegelmeters" />
                                <span asp-validation-for="ShelvingDistance" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="row border border-3 border-dark p-1">
                            <h5 class="text-center">Plaats</h5>
                            <div class="form-group col-4">
                                <label asp-for="City" class="control-label"></label>
                                <input asp-for="City" class="form-control" placeholder="Stad" />
                                <span asp-validation-for="City" class="text-danger"></span>
                            </div>
                            <div class="form-group col-4">
                                <label asp-for="Street" class="control-label"></label>
                                <input asp-for="Street" class="form-control" placeholder="Straat" />
                                <span asp-validation-for="Street" class="text-danger"></span>
                            </div>
                            <div class="form-group col-4">
                                <label asp-for="HouseNumber" class="control-label"></label>
                                <input asp-for="HouseNumber" class="form-control" placeholder="Huisnummer" />
                                <span asp-validation-for="HouseNumber" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col border border-3 border-dark employee-create-box">
                    <div class="p-3">
                        <div class="row border border-3 border-dark p-1">
                            <table>
                                <tr>
                                    <th width=200px>Dag</th>
                                    <th>@Html.DisplayNameFor(model => model.OpeningHours[0].OpenTime)</th>
                                    <th>@Html.DisplayNameFor(model => model.OpeningHours[0].CloseTime)</th>
                                    <th>@Html.DisplayNameFor(model => model.OpeningHours[0].IsClosed)</th>
                                </tr>
                            </table>
                            @for (int i = 0; i < Model.OpeningHours.Count; i++)
                            {
                                @Html.HiddenFor(model => model.OpeningHours[i].DayOfWeek)
                                <table>
                                    <tr>
                                        <th width=200px>
                                            @Html.DisplayFor(model => model.OpeningHours[i].DayOfWeek)
                                        </th>
                                        <th>
                                            @Html.EditorFor(model => model.OpeningHours[i].OpenTime)
                                        </th>
                                        <th>
                                            @Html.EditorFor(model => model.OpeningHours[i].CloseTime)
                                        </th>
                                        <th>
                                            @Html.EditorFor(model => model.OpeningHours[i].IsClosed)
                                        </th>
                                    </tr>
                                </table>
                                <div class="text-center">
                                    @Html.ValidationMessageFor(model => model.OpeningHours[i].OpenTime)
                                    @Html.ValidationMessageFor(model => model.OpeningHours[i].CloseTime)
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="form-group h-100 d-flex align-items-center justify-content-center p-3">
    <input type="submit" value="Filiaal aanmaken!" form="CreateForm" class="btn btn-success btn-lg" />
</div>
<div class="form-group h-100 d-flex align-items-center justify-content-center p-3">
    <a class="btn btn-danger btn-sm" asp-action="Index">Ga terug naar lijst zonder opslaan</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
