@model Bumbo.Models.RosterManager.RosterDayViewModel



<h1 class=" col-sm d-flex justify-content-center flex-nowrap">Rooster</h1>

<!-- if modelstate that returned is not valid, say that saving failed-->
@if (Model.ErrorMessage != null)
{
    <div class="alert alert-danger text-center" role="alert">
        <strong>Oeps!</strong> De veranderingen konden niet opgeslagen worden omdat @Model.ErrorMessage
    </div>
}

<div class="top-date-header  d-flex justify-content-between m-2 border rounded-2 align-items-center border border-5 border-dark">
    <div>
        <!--Arrow to left, using an online arrow png-->
        <a class="text-decoration-none" asp-action="Index" asp-route-dateInput="@Model.Date.AddDays(-1).Date">
            <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-arrow-bar-left" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M12.5 15a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 1 0v13a.5.5 0 0 1-.5.5zM10 8a.5.5 0 0 1-.5.5H3.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L3.707 7.5H9.5a.5.5 0 0 1 .5.5z" />
            </svg>
        </a>
    </div>
    <div>
        <!--Week  number, date information which is in the center.-->
        <p>Week @Model.GetWeekNumber(Model.Date) | @Model.Date.ToShortDateString() </p>
    </div>
    <div>
        <!--Arrow to right, using an online arrow png on the right side of the bar.-->
        <a class="text-decoration-none" asp-action="Index" asp-route-dateInput="@Model.Date.AddDays(1).Date">
            <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-arrow-bar-right" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M6 8a.5.5 0 0 0 .5.5h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 0 0-.708.708L12.293 7.5H6.5A.5.5 0 0 0 6 8zm-2.5 7a.5.5 0 0 1-.5-.5v-13a.5.5 0 0 1 1 0v13a.5.5 0 0 1-.5.5z" />
            </svg>
        </a>
    </div>
</div>
  
<div>

    <dl class="row border">
        <div class="border col-sm d-flex justify-content-center flex-nowrap">

            <dt>
                @Html.DisplayNameFor(model => model.CassierePrognose) :
            </dt>
            <dd>
                @if (Model.CassierePrognose == -1)
                {
                    <span>Geen Info</span>
                }
                else
                {
                    <span>@Model.CassierePrognose Uren</span>
                }
            </dd>
        </div>

        <div class="border col-sm d-flex justify-content-center flex-nowrap">
            <dt>
                @Html.DisplayNameFor(model => model.FreshPrognose) :
            </dt>
            <dd>
                @if (Model.FreshPrognose == -1)
                {
                    <span>Geen Info</span>
                }
                else
                {
                    <span>@Model.FreshPrognose Uren</span>
                }
            </dd>
        </div>

        <div class="border col-sm d-flex justify-content-center flex-nowrap">
            <dt>
                @Html.DisplayNameFor(model => model.StockersPrognose) :
            </dt>
            <dd>
                @if (Model.StockersPrognose == -1)
                {
                    <span>Geen Info</span>
                }
                else
                {
                    <span>@Model.StockersPrognose Uren</span>
                }
            </dd>
        </div>



    </dl>
</div>


<script>
    'use strict';

    // list of all shifts on screen.
    var listshifts = new Array; 
    


    // we use a script to get the width of a normal cell and base the width of the shift div on that, so that it should resize along with the screen if it changes.
    function getWidthOfbase(elem, hours, minutepercstart, minutepercend) {


        // So what we do here is we get the normal width of the first cell in the table
        // we'll use this as a template for the width.
        // We calculate the final width of the div
        // using the width of a normal cell, times the amount of hours.
        // We then calculate the offset of the div, using the time percentages.
        

        let cell = document.querySelector('.roster-table-cell');
        let width = cell.offsetWidth;

        let finalwidth = (width * hours);

        // this is the offset of the div caused by any minutes in the shift.
        let startoffset = (width * (minutepercstart * 0.01));
        let endoffset = (width * (minutepercend * 0.01));
        

        // We set the width of the div using the calculated values.
        elem.style.width = finalwidth - startoffset + endoffset + 'px';

        
              // For some reason there's a 8 px weirdness going on.

              // I can't find out why but this works.
        startoffset = startoffset - 8;

        // We move the div right using the minute percentages.
        elem.style.marginLeft = startoffset + 'px';

        elem.add
    }


    function myFunction(shift){
        getWidthOfbase(shift.element, shift.shiftlength, shift.shiftstartperc, shift.shiftendperc);
    }

    // Everytime the screen is resized, we resize every shift that's in the list along with it.
    window.addEventListener("resize", function () {
        listshifts.forEach(myFunction);
    });

        



    function onShiftClick(shiftinfo){
        var editmodal = document.getElementById("modal");
        editmodal.style.display = "block";
        var createmodal = document.getElementById("createshiftmodal");
        createmodal.style.display = "none";
        var editmodal = document.getElementById("editshiftmodal");
        
        
        document.getElementById("shiftIdInput").value = shiftinfo.shiftid;
    }





</script>


<div class="text-center m-3">

    <!-- Trigger/Open The Modal -->
    <button id="openModalBTN">Voeg dienst toe</button>
</div>


<div>

        <!--table, 24 long horizontal -->
    <table class="table roster-table table-hover" style="background-color: white;">
            <thead>
                <tr class="">
                <th class="border border-2 border-dark roster-table-employee-cell">Naam</th>
                    @*Important note: The text in the header blocks must be equal characters long.*@
                    @for (int i = 0; i < 24; i++)
                    {
     
                    <th class="small border border-2 border-dark roster-table-header-cell">@Model.GetHeaderTimeString(i) </th>
                   
                    }
                </tr>
            </thead>



            <tbody>

                <!--For each available employee, create a row-->
                @if (Model.Employees != null)
                {
                    foreach (var employee in Model.Employees)
                    {
                        <tr class="roster-shift-containter" >
                            <td class="small roster-table-employee-cell">
                                 @employee.FullName
                            </td>

                            @for (int i = 0; i < 24; i++)
                            {

                            
                                @if (Model.GetShiftOnHourOfEmployee(employee, i) != null)
                                {

                                <td id="roster-start" class="roster-table-cell ">
                                 
                                    <div id="roster-start-div " class="roster-shift text-center" style="height: 100%;">
                                        @*If the shift is very short, we use a different string not make it ugly.*@
                                        @if (Model.GetShiftLength(employee, i) < 2)
                                        {
                                            <p class="align-self-center">  @Model.GetShiftOnHourOfEmployee(employee, i).Department.DepartmentName </p>
                                        }else{
                                            <p class="align-self-center"> * @Model.GetShiftOnHourOfEmployee(employee, i).Department.DepartmentName *</p>
                                        }
                                        
                                       
                                        <script>
                                            // gets the div above, and passes it to a function which then sets the div length based on the shift length.
                                            var divs = document.querySelectorAll('div');
                                            var above_div = divs[divs.length - 1];

                                            getWidthOfbase(above_div, @Model.GetShiftLength(employee, i), @Model.GetShiftStartPercentage(employee, i), @Model.GetShiftEndPercentage(employee, i));

                                            // we add this shift to the list of shifts:
                                            var shift = { element: above_div, shiftlength: @Model.GetShiftLength(employee, i), shiftstartperc: @Model.GetShiftStartPercentage(employee, i), shiftendperc: @Model.GetShiftEndPercentage(employee, i), shiftid: @Model.GetShiftOnHourOfEmployee(employee, i).Id };
                          
                                            listshifts.push(shift);

                                            // possibly in the future 
                                            // shiftid, employeename, employeeid, departmentname, departmentid, starttime, endtime 
                                            // pass these values along with the function to auto fill the modal.
                                           

                                            var shiftinfo = { shiftid: shift.shiftid};
                                    
                                            above_div.addEventListener("click", onShiftClick.bind(this, shiftinfo), false);

                                            </script>
                                    </div>

                                </td>

                            }else{
                                <td class="roster-table-cell">
                                </td>
                                }



                            }
                         
                        </tr>
                    }
                }

            </tbody>
        </table>

    </div>



<!-- The Modal for creating a new shift -->
<div id="modal" class="modal">

    <!-- Modal content -->
    <div class="modal-content text-center prognosis-textarea">
        <span class="close position-absolute">&times;</span>
        <label> </label>
        <div id="createshiftmodal" class="m-3 text-center align-content-center">
            <form asp-action="CreateShift">
                <input type="hidden" asp-for="Date" />
                <h2>Voeg een dienst toe</h2>
                <div class="row">
                    <span class="col">Medewerker:</span>
                    <select asp-for="SelectedEmployeeId" class="form-control col">
                        
                        @foreach (var employee in Model.Employees)
                        {
                            <option value="@employee.Id">@employee.FullName</option>
                        }
                    </select>


                    @*TODO make it so you can only select department for employee who have them.*@
                    <span class="col">In afdeling:</span>
                   
                     <select asp-for="SelectedDepartmentId" class="form-control col">
                        
                        @foreach (var dep in Model.Departments)
                        {
                            <option value="@dep.Id">@dep.DepartmentName</option>
                        }
                    </select>
                </div>
                <div class="row">
                    <span class="col">Startijd:</span>
                    <input asp-for="SelectedStartTime" class="form-control col" />

                    <span class="col">Eindtijd:</span>
                    <input asp-for="SelectedEndTime" class="form-control col" />
                </div>
                <label> </label>
                <input type="submit" value="Opslaan" class="btn btn-success btn-sm " />
            </form>
        </div>

        <div id="editshiftmodal" class="m-3 text-center align-content-center">
            <form  asp-action="EditShift">
                <input type="hidden" asp-for="Date" />
                <input id="shiftIdInput" type="hidden" asp-for="SelectedShiftId" />
                <h2>Wijzig een dienst</h2>
                <div class="row">
                    <span class="col">Medewerker:</span>
                    <input  disabled asp-for="SelectedEmployeeId" value="" class="form-control col">

                    @*TODO make it so you can only select department for employee who have them.*@
                    <span class="col">In afdeling:</span>

                    <select  asp-for="SelectedDepartmentId" class="form-control col">

                        @foreach (var dep in Model.Departments)
                        {
                            <option value="@dep.Id">@dep.DepartmentName</option>
                        }
                    </select>
                </div>
                <div class="row">
                    <span class="col">Startijd:</span>
                    <input id="starttimeinput" asp-for="SelectedStartTime" class="form-control col" />

                    <span class="col">Eindtijd:</span>
                    <input id="endtimeinput" asp-for="SelectedEndTime" class="form-control col" />
                </div>
                <label> </label>
                <input type="submit" value="Opslaan" class="btn btn-success btn-sm " />
            </form>
        </div>


    </div>

</div>

<!-- The Modal for editing a shift -->
<div id="editmodal" class="modal">

    <!-- Modal content -->
    <div class="modal-content text-center prognosis-textarea">
        <span class="close position-absolute">&times;</span>
        <label> </label>
        <div class="m-3 text-center align-content-center">
            <form asp-action="CreateShift">
                <input type="hidden" asp-for="Date" />
                <h2>Voeg een dienst toe</h2>
                <div class="row">
                    <span class="col">Medewerker:</span>
                    <select asp-for="SelectedEmployeeId" class="form-control col">

                        @foreach (var employee in Model.Employees)
                        {
                            <option value="@employee.Id">@employee.FullName</option>
                        }
                    </select>


                    @*TODO make it so you can only select department for employee who have them.*@
                    <span class="col">In afdeling:</span>

                    <select asp-for="SelectedDepartmentId" class="form-control col">

                        @foreach (var dep in Model.Departments)
                        {
                            <option value="@dep.Id">@dep.DepartmentName</option>
                        }
                    </select>
                </div>
                <div class="row">
                    <span class="col">Startijd:</span>
                    <input asp-for="SelectedStartTime" class="form-control col" />

                    <span class="col">Eindtijd:</span>
                    <input asp-for="SelectedEndTime" class="form-control col" />
                </div>
                <label> </label>
                <span asp-validation-for="Date" class="text-danger"></span>
                <span asp-validation-for="Date" class="text-danger"></span>
                <input type="submit" value="Opslaan" class="btn btn-success btn-sm " />
            </form>
        </div>


    </div>

</div>









